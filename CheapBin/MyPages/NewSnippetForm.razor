@page "/new"

@using CheapBin.Models
@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject ISnippetData _db

<h3>NewSnippetForm</h3>

<input class="title" @oninput="HandleOnChange_Title" value="@newSnippet.Title" placeholder="Untitle" />
<textarea id="snippetTextbox" class="form-control" @oninput="HandleOnChange_Snippet" value="@newSnippet.Snippet"/>
<div class="buttons">
    <button class="btn btn-success" @onclick="Save">Save</button>
    <button class="btn btn-warning">Discard</button>
</div>


@code {
    private string? textboxText;
    private string? titleText;
    private DisplaySnippetModel newSnippet = new();

    // Ez alapján kell majd betölteni a textboxba a db-ből
    //protected override async Task OnInitializedAsync()
    //{
    //    textboxText = "Onload string";
    //}

    private async Task HandleOnChange_Snippet(ChangeEventArgs args)
    {
        newSnippet.Snippet = args.Value.ToString();
    }

    private async Task HandleOnChange_Title(ChangeEventArgs args)
    {
        newSnippet.Title = args.Value.ToString();
    }

    protected async Task Save()
    {
        Console.WriteLine($"{titleText}\n {textboxText}\n");

        SnippetModel s = new()
        {
            Title = newSnippet.Title,
            Snippet = newSnippet.Snippet
        };

        //Console.WriteLine(s.Title + s.Snippet);

        await _db.InsertSnippet(s);

        newSnippet = new DisplaySnippetModel();
    }
}
